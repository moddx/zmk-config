/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define L1 1
#define L2 2
#define L3 3  // NUMBERs, F1-12..
#define L4 4  // SPECIAL
#define L5 5  // NUMPAD
#define L6 6  // BL
#define L7 7  // F1-12...
#define L8 8  // SYM

&caps_word {
    continue-list = <UNDERSCORE MINUS MOD_LSFT MOD_RSFT>;
};

/ {
    macros {
        email: email {
            label = "email";
            compatible = "zmk,behavior-macro";
            wait-ms = <5>;
            tap-ms = <5>;
            #binding-cells = <0>;
            bindings = <&macro_tap /*SECRET_EMAIL*/ &kp E >;
        };
    };

    behaviors {
      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <200>;
          quick-tap-ms = <0>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };

      parentheses: parentheses {
          compatible = "zmk,behavior-mod-morph";
          label = "PARENTHESES";
          #binding-cells = <0>;
          bindings = <&kp LS(N8)>, <&kp LS(N9)>;
          mods = <(MOD_LSFT|MOD_LCTL|MOD_LALT)>;
      };

      t_tab: t_tab {
          compatible = "zmk,behavior-mod-morph";
          label = "t_tab";
          #binding-cells = <0>;
          bindings = <&kp T>, <&kp TAB>;
          mods = <(MOD_LALT)>;
      };

      // q_quest: q_quest {
      //     compatible = "zmk,behavior-mod-morph";
      //     label = "q_quest";
      //     #binding-cells = <0>;
      //     bindings = <&kp Q>, <&kp LS(MINUS)>;
      //     mods = <(MOD_LALT)>;
      // };

      dot_comma: dot_comma {
          compatible = "zmk,behavior-mod-morph";
          label = "dot_comma";
          #binding-cells = <0>;
          bindings = <&kp DOT>, <&kp COMMA>;
          mods = <(MOD_LALT|MOD_LSFT)>;
      };
    };
    
    keymap {
        compatible = "zmk,keymap";

    // DEFAULT
        default_layer {
            bindings = <
    &none &kp X       &kp V    &kp L    &kp C     &kp W     &none            &none        &kp K   &kp H   &kp G     &kp F    &kp Q             &none
    &none &hm LALT U  &lt L8 I &lt L7 A &lt L5 E  &kp O     &none            &none        &kp S   &kp N   &kp R     &t_tab   &hm LALT D        &none
    &none &hm LSHFT Z &none    &none    &kp P     &kp Y     &none            &none        &kp B   &kp M   &kp COMMA &kp DOT  &hm RSHFT J       &none
    &none &none       &none    &none    &kp LGUI  &kp LCTRL &mo L1           &lt L2 SPACE &mo L2  &mo L3  &none     &kp RALT &kp LC(LA(LS(Q))) &none
            >;
        };

    // L1    
        copy_move_braces_layer {
          bindings = <
    &none &kp ESC         &none     &kp ENTER  &none      &kp INS  &none           &none    &none    &kp BSLH &kp RA(N7) &kp RA(N0) &kp C_PLAY_PAUSE &none
    &none &kp LCTRL       &kp INS   &kp LC(S)  &kp HOME   &kp END  &none           &none    &kp LEFT &kp DOWN &kp UP     &kp RIGHT  &parentheses     &none
    &none &hm LSHFT LC(Y) &kp LC(X) &kp LC(C)  &kp LC(V)  &tog L4  &none           &none    &kp DEL  &kp BSPC &kp RA(N8) &kp RA(N9) &hm RSHFT BSLH   &none
    &none &none           &none     &none      &trans     &none    &none           &kp LALT &mo L2   &mo L3   &none      &none      &none            &none
          >;
        };
    
    // L2
        special_chars_layer {
          bindings = <
    &none &email          &kp RA(MINUS)   &kp LS(N0)          &kp LS(N6) &kp RA(RBKT)        &none             &none  &none     &kp LS(F3) &kp RS(RBKT) &kp F3   &kp RBKT  &none
    &none &hm LCTRL RA(Q) &kp NON_US_BSLH &kp LS(NON_US_BSLH) &kp SLASH  &kp RA(NON_US_BSLH) &none             &none  &kp HOME  &kp PG_DN  &kp PG_UP    &kp END  &none     &none
    &none &hm LSHFT K_APP &kp LA(F4)      &kp LS(N7)          &kp LS(N5) &kp LS(N1)          &none             &none  &kp MINUS &kp LBKT   &kp SEMI     &kp APOS &kp RSHFT &none
    &none &none           &none           &none               &trans     &caps_word          &mo L3            &none  &none     &none      &none        &none    &none     &none
          >;
        };

    // L3
        only_keep_accents_layer {
          bindings = <
    &kp GRAVE      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &none              &none  &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp EQUAL
    &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &none              &none  &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &kp LS(EQUAL)
    &kp LSHFT      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &none              &none  &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp F11
    &kp LSHFT      &kp F12     &none       &kp LGUI    &kp RALT    &kp LCTRL   &kp LALT           &none  &none       &none       &none       &none       &none       &kp RSHFT
          >;
        };
    
    // L4
        system_layer { // i mainly use this for &bootloader :/
          bindings = <
    &none &kp PG_UP &none     &kp UP    &none     &kp DEL  &none             &none      &none   &none   &none  &kp SCROLLLOCK &kp PSCRN &none
    &none &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &kp BSPC &none             &none      &none   &none   &none  &none          &none     &none
    &none &kp LC(Y) &kp LC(X) &kp LC(C) &kp LC(V) &tog L4  &none             &none      &none   &none   &none  &none          &none     &none
    &none &none     &none     &none     &kp LGUI  &kp LALT &mo L1            &lt L2 SPACE &mo L2 &mo L3 &none  &none          &reset    &bootloader
          >;
        };
    
    // L5, numpad and special chars 
        num_layer {
          bindings = <
    &none &kp KP_NUM &none     &none     &none     &sl L6    &none             &none  &kp RS(N7)   &kp N7    &kp N8  &kp N9  &kp SLASH &none
    &none &sk LALT   &sk LSHFT &sk LCTRL &none	   &none     &none             &none  &kp LS(RBKT) &kp N4    &kp N5  &kp N6  &kp RBKT  &none
    &none &sk LSHFT  &none     &none     &none     &none     &none             &none  &kp BSPC     &kp N1    &kp N2  &kp N3  &kp RSHFT &none
    &none &none      &none     &none     &sk LGUI  &sk LCTRL &mo L1            &kp N0 &dot_comma   &kp COMMA &none   &none   &none     &none
          >;
        };
    
    // L6, bluetooth
        bt_layer {
          bindings = <
    &none &bt BT_CLR   &none        &none        &none        &none        &none             &none   &bt BT_SEL 6 &bt BT_SEL 7 &bt BT_SEL 8 &none &none &none
    &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none             &none   &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5 &none &none &none
    &none &none        &none        &none        &none        &none        &none             &none   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none &none &none
    &none &none        &none        &none        &none        &none        &none             &out OUT_USB &out OUT_BLE &none   &none        &none &none &none
          >;
        };

    // L7, f-keys    
        f_keys_layer {
          bindings = <
    &none &none     &none     &none     &none     &mo L6    &none             &none &none &kp F7 &kp F8 &kp F9 &kp F10 &none
    &none &sk LALT  &sk LSHFT &sk LCTRL &none     &none     &none             &none &none &kp F4 &kp F5 &kp F6 &kp F11 &none
    &none &sk LSHFT &none     &none     &none     &none     &none             &none &none &kp F1 &kp F2 &kp F3 &kp F12 &none
    &none &none     &none     &none     &sk LGUI  &sk LCTRL &mo L1            &none &none &none  &none  &none  &none   &none
          >;
        };
        
    // L8, numpad and special chars 
        sym_layer {
          bindings = <
    &none &kp KP_NUM &none     &none     &none     &sl L6    &none             &none  &kp RS(N7)   &kp LS(N7) &kp LS(N8) &kp LS(N9) &none &none
    &none &sk LALT   &sk LSHFT &sk LCTRL &none	   &none     &none             &none  &kp LS(RBKT) &kp LS(N4) &kp LS(N5) &kp LS(N6) &none &none
    &none &sk LSHFT  &none     &none     &none     &none     &none             &none  &kp BSPC     &kp LS(N1) &kp LS(N2) &kp LS(N3) &none &none
    &none &none      &none     &none     &sk LGUI  &sk LCTRL &mo L1            &kp N0 &dot_comma   &kp COMMA  &none      &none      &none &none
          >;
        };
    };
};
